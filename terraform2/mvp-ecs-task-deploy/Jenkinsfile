node ('master') {

    stage('Clone git repo') { 
        cleanWs()
        git url: 'https://github.com/kzl86/mvp-lab.git', branch: 'main'
    }

    stage('Download terraform 0.15.0 cli') {
        sh label: '', script: 'curl https://releases.hashicorp.com/terraform/0.15.0/terraform_0.15.0_linux_amd64.zip \
            --output terraform_0.15.0_darwin_amd64.zip \
             && unzip terraform_0.15.0_darwin_amd64.zip'
    }

    stage('mvp-ecs-Init') {
		withCredentials([string(credentialsId: 'AWS_ACCESS_KEY', variable: 'AWS_ACCESS_KEY_ID'), 
                        string(credentialsId: 'AWS_SECRET_KEY', variable: 'AWS_SECRET_ACCESS_KEY')]) {
							dir('terraform2/mvp-ecs-task-deploy') {
							sh script: '../../terraform init -input=false'
						}
		}
    }

    if (REQUESTED_ACTION == 'build') {
		stage('mvp-ecs-build') {
            withCredentials([string(credentialsId: 'AWS_ACCESS_KEY', variable: 'AWS_ACCESS_KEY_ID'), 
                            string(credentialsId: 'AWS_SECRET_KEY', variable: 'AWS_SECRET_ACCESS_KEY')]) {
                                dir('terraform2/mvp-ecs-task-deploy') {
                                    sh script: '../../terraform plan \
                                    -out mvp-ecs-task.tfplan \
                                    -var="aws_access_key=$AWS_ACCESS_KEY_ID" \
                                    -var="aws_secret_key=$AWS_SECRET_ACCESS_KEY"'				
                                }
            }
		}
    }
    
    if (REQUESTED_ACTION == 'destroy') {
	    stage('mvp-ecs-destroy') {
            withCredentials([string(credentialsId: 'AWS_ACCESS_KEY', variable: 'AWS_ACCESS_KEY_ID'), 
                            string(credentialsId: 'AWS_SECRET_KEY', variable: 'AWS_SECRET_ACCESS_KEY')]) {
                                dir('terraform2/mvp-ecs-task-deploy') {
                                    sh script: '../../terraform plan -destroy \
                                    -out mvp-ecs-task.tfplan \
                                    -var="aws_access_key=$AWS_ACCESS_KEY_ID" \
                                    -var="aws_secret_key=$AWS_SECRET_ACCESS_KEY"'					
                                }
            }
		}
    }
    
    stage('mvp-ecs-Apply') {
        withCredentials([string(credentialsId: 'AWS_ACCESS_KEY', variable: 'AWS_ACCESS_KEY_ID'), 
                        string(credentialsId: 'AWS_SECRET_KEY', variable: 'AWS_SECRET_ACCESS_KEY')]) {
                            dir('terraform2/mvp-ecs-task-deploy') {
                                sh script: '../../terraform apply mvp-ecs-task.tfplan'
                            }
        }
    }
	
}